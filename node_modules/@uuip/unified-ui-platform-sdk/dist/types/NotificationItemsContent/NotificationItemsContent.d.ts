import { TemplateResult } from "lit-html";
import { Notifications } from "../notifications/Notifications";
export declare namespace NotificationItemsContent {
    class DataController {
        readonly type?: string;
        readonly text: string | TemplateResult;
        readonly link?: string;
        readonly linkName?: string;
        readonly linkTooltip?: Object | string;
        readonly iconDetail?: IconTemplate;
        readonly linkHandler?: (n: Notifications.Item) => void;
        readonly clickHandler?: (n: Notifications.Item) => void;
        readonly errorDetail?: Detail;
        readonly taskId?: string;
        readonly localization: Localization;
        readonly dismissHandler?: (n: Notifications.Item) => void;
        readonly actions?: Action[];
        readonly lineClamp?: number;
        constructor(p: {
            type?: string;
            text: string | TemplateResult;
            link?: string;
            linkName?: string;
            linkTooltip?: Object | string;
            iconDetail?: IconTemplate;
            linkHandler?: (n: Notifications.Item) => void;
            clickHandler?: (n: Notifications.Item) => void;
            errorDetail?: Detail;
            taskId?: string;
            localization?: Localization;
            dismissHandler?: (n: Notifications.Item) => void;
            actions?: Action[];
            lineClamp?: number;
        });
    }
    type Action = {
        label: string;
        variant: string;
        handler: (n: Notifications.Item) => void;
    };
    type Localization = {
        closeButtonText: string;
    };
    type IconTemplate = {
        color?: string;
        bgColor?: string;
        iconName?: string;
        iconColor?: string;
        iconUrl?: string;
    };
    type ErrorDetailLocalization = {
        errorLessButtonText: string;
        errorMoreButtonText: string;
        errorDetailsText: string;
        trackingIdTitleText: string;
        trackingIdDescriptionText: string;
        trackingIdLabelText: string;
        copyText: string;
        copiedText: string;
    };
    type Detail = {
        header?: string;
        title?: string;
        message: string;
        trackingId?: string;
        localization: Partial<ErrorDetailLocalization>;
    };
}
