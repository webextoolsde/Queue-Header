export declare const monitoringOffered: {
    orgId: string;
    trackingId: string;
    type: string;
    data: {
        eventType: string;
        id: string;
        monitorType: string;
        orgId: string;
        queueId: string;
        queueName: string;
        supervisorDN: string;
        supervisorId: string;
        task: {
            callAssociatedData: {
                "FC-DESKTOP-VIEW": {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                Global_FeedbackSurveyOptIn: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                Global_Language: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                Global_TestKEY: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                TestCADVar: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                ani: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                bankname: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                countryName: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                dn: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                fcpopovervar: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                fcvarintractionpan: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                ronaTimeout: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                testSecureCad: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
                virtualTeamName: {
                    agentEditable: boolean;
                    agentViewable: boolean;
                    displayName: string;
                    global: boolean;
                    isSecure: boolean;
                    name: string;
                    reportable: boolean;
                    secureKeyId: string;
                    secureKeyVersion: number;
                    type: string;
                    value: string;
                };
            };
            callAssociatedDetails: {
                ani: string;
                dn: string;
                ronaTimeout: string;
                virtualTeamName: string;
            };
            callFlowParams: {};
            callProcessingDetails: {
                CONTINUE_RECORDING_ON_TRANSFER: string;
                EP_ID: string;
                QMgrName: string;
                QueueId: string;
                ROUTING_TYPE: string;
                ani: string;
                dnis: string;
                fceRegisteredEvents: string;
                isParked: string;
                mohFileName: string;
                monitorType: string;
                monitoringInvisibleMode: string;
                monitoringRequestId: string;
                participantInviteTimeout: string;
                pauseDuration: string;
                pauseResumeEnabled: string;
                priority: string;
                recordInProgress: string;
                recordingStarted: string;
                ronaTimeout: string;
                routingStrategyId: string;
                taskToBeSelfServiced: string;
                tenantId: string;
                virtualTeamName: string;
                vteamId: string;
                workflowId: string;
                workflowName: string;
            };
            contactDirection: {
                type: string;
            };
            createdTimestamp: number;
            currentVTeam: string;
            interactionId: string;
            isFcManaged: boolean;
            isTerminated: boolean;
            media: {
                "e5c9d91f-e776-4748-9478-f6a24daa594a": {
                    holdTimestamp: null;
                    isHold: boolean;
                    mType: string;
                    mediaMgr: string;
                    mediaResourceId: string;
                    mediaType: string;
                    participants: string[];
                };
            };
            mediaChannel: string;
            mediaType: string;
            orgId: string;
            outboundType: null;
            owner: string;
            participants: {
                "+19997651104": {
                    id: string;
                    pType: string;
                    type: string;
                };
                "078121e3-103b-4a2a-b470-07e0babb9dd9": {
                    channelId: string;
                    consultState: null;
                    consultTimestamp: null;
                    dn: string;
                    hasJoined: boolean;
                    id: string;
                    isConsulted: boolean;
                    isOffered: boolean;
                    isWrapUp: boolean;
                    joinTimestamp: number;
                    lastUpdated: number;
                    name: string;
                    pType: string;
                    queueId: string;
                    queueMgrId: string;
                    sessionId: string;
                    siteId: string;
                    skillId: null;
                    skillName: null;
                    skills: never[];
                    teamId: string;
                    teamName: string;
                    type: string;
                    wrapUpTimestamp: null;
                };
                "2e98dc66-744f-4fc2-8646-4c24365a3dd6": {
                    dn: string;
                    hasJoined: boolean;
                    id: string;
                    joinTimestamp: null;
                    monitoringState: {
                        type: string;
                    };
                    pType: string;
                    type: string;
                };
            };
            previousVTeams: string[];
            queuedTimestamp: null;
            state: string;
            workflowManager: null;
        };
        taskId: string;
        trackingId: string;
        type: string;
    };
};
