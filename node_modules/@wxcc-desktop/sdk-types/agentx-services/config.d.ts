export type AgentxServicesConfig = {
    AQM_HOST: string;
    EMM_HOST: string;
    U2C_SERVICE_URL: string;
    NOTIF_HOST: string;
    COMPLIANCE_SERVICE_URL: string;
    CONFIG_URL: string;
    DIALER_HOST: string;
    MEDIA_SERVICE_HOST: string;
    API_GATEWAY: string;
    AGENTX_BACKEND_PROXY_SERVICE_HOST: string;
    WELCOME_TIMEOUT: string;
    SPLIT_KEY_TOKEN: string;
    LOGROCKET_AUTHORIZATION_KEY?: string;
    HOST_URL: string;
    MICROSOFT_CLIENT_ID: string;
    CC_DC: string;
    JABBER_HOST_URL: string;
    WEBEX_APIS_URL: string;
    API_AI_ASSISTANT_SERVICE_URL: string;
};
export declare const KEEPALIVE_WORKER_INTERVAL = 4000;
export declare const NOTIFS_RESOLVE_DELAY = 1200;
export declare const CLOSE_SOCKET_TIMEOUT_DURATION = 16000;
export declare const PING_API_URL = "https://reachable.webex.com";
export declare const LEGACY_PING_API_URL = "/health";
export declare const METHOD_NAME = "GET";
export declare const LEGACY_METHOD_NAME: string;
export declare const CONF: {
    readonly [k in keyof AgentxServicesConfig]: AgentxServicesConfig[k];
};
export declare function setAgentxServicesConfig(config: AgentxServicesConfig): void;
export declare const getAuthService: () => any;
export declare const setAuthService: (authService: any) => void;
//# sourceMappingURL=config.d.ts.map