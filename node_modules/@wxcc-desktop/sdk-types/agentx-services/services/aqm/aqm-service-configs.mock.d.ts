import { Service } from "../..";
export declare const Mock_AgentPropertyChanged: Service.Aqm.Configs.AgentPropertyChanged;
export declare const Mock_EmptyAgentPropertyChanged: Service.Aqm.Configs.AgentPropertyChanged;
export declare const Mock_UpdateAgentProfile: Service.Aqm.Configs.UpdateAgentProfile;
export declare const mockTeams: {
    teamId: string;
    teamName: string;
    desktopLayoutId: string;
}[];
export declare const Mock_EmptyEntityAgentProfile: Service.Aqm.Configs.UpdateAgentProfile;
export declare const Mock_EmptyAgentxBackendInit: Service.Conf.Profile;
export declare const Mock_AgentxBackendInit: Service.Conf.Profile;
export declare const mockIdleCodes: {
    id: string;
    isDefault: boolean;
    isSystem: boolean;
    name: string;
}[];
export declare const mockWrapupCodes: {
    id: string;
    isDefault: boolean;
    isSystem: boolean;
    name: string;
}[];
export declare const mockAgentWrapupCodes: {
    data: {
        id: string;
        isDefault: boolean;
        isSystem: boolean;
        name: string;
    }[];
    meta: {
        links: {
            first: string;
            last: string;
            next: string;
            self: string;
        };
        orgid: string;
        page: number;
        pageSize: number;
        totalPages: number;
        totalRecords: number;
    };
};
export declare const mockTeamsMeta: {
    links: {
        first: string;
        last: string;
        next: string;
        self: string;
    };
    orgid: string;
    page: number;
    pageSize: number;
    totalPages: number;
    totalRecords: number;
};
//# sourceMappingURL=aqm-service-configs.mock.d.ts.map