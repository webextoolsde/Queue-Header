import { AqmReqs } from "../../core/aqm-reqs";
import { HttpReqs } from "../../core/http-reqs";
import { Service } from "../../index";
import "./aqm-service-contact-types";
import Contact = Service.Aqm.Contact;
export declare function aqmContact(aqm: AqmReqs, http: HttpReqs): {
    end: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        interactionId: string;
    }>;
    cancelTask: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        interactionId: string;
    }>;
    wrapup: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        interactionId: string;
        data: Contact.WrapupPayLoad;
    }>;
    decline: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        interactionId: string;
        data: Contact.declinePayload;
        isConsult: boolean;
    }>;
    vteamList: import("../../core/aqm-reqs").Res<Contact.VTeamSuccess, {
        data: Contact.VTeam;
    }>;
    fetchHistoryByANI: (p: {
        ani: string;
        startTime: number;
        endTime: number;
    }, cb?: ((res: any) => void | Contact.HistoryByANI) | undefined) => Promise<Contact.HistoryByANI>;
    fetchHistoryByAgent: (p: {
        startTime: number;
        endTime: number;
    }, cb?: ((res: any) => void | Contact.HistoryByAgent) | undefined) => Promise<Contact.HistoryByAgent>;
    fetchTranscript: (p: {
        transcriptId: string;
    }, cb?: ((res: any) => string | void) | undefined) => Promise<string>;
    eAgentContact: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactAssigned: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactAssignFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactEnded: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactWrappedUp: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentOfferContact: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentOfferContactRona: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactReserved: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentInviteFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentOfferConsult: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentWrapup: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentOfferCampaignReserved: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentOfferCampaign> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentOfferCampaign) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentOfferCampaign>;
    };
    eAgentCampaignContactUpdated: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentAddCampaignReserved: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentAddCampaign> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentAddCampaign) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentAddCampaign>;
    };
    eAgentContactHeld: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eResumeRecording: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    ePauseRecording: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eConsultTransfer: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultTransferFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eContactMerged: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentblindTransferred: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentvteamTransfer: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eCallRecordingStarted: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactUnHeld: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultCreated: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultConferenced: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultEnded: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentCtqCancelled: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultConferenceEnded: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsulting: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultEndFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentCtqFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentCtqCancelFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultConferenceEndFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentContactCleanup: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.ContactCleanupData> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.ContactCleanupData) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.ContactCleanupData>;
    };
    eContactCallbackFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.ContactCallbackFailed> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.ContactCallbackFailed) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.ContactCallbackFailed>;
    };
    eContactOwnerChanged: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eParticipantJoinedConference: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eParticipantLeftConference: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConferenceTransferred: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eParticipantPostCallActivity: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultConferencing: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentConsultTransferring: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eAgentMediaForkUpdate: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
};
//# sourceMappingURL=aqm-service-contact.d.ts.map