import { AqmReqs } from "../../core/aqm-reqs";
import { Service } from "../../index";
import Contact = Service.Aqm.Contact;
import Failure = Service.Aqm.Global.Failure;
export declare function aqmDialer(aqm: AqmReqs): {
    startOutdial: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        data: Service.Aqm.Dialer.tasks;
    }>;
    /**
     * CAD Variable Update
     */
    updateCadVariables: (args: {
        interactionId: string;
        data: Service.Aqm.Dialer.updateCadPayLoad;
        secureCad?: Array<string>;
        keyId: string | null;
        keyVersion: number | null;
    }) => Promise<any>;
    acceptPreviewContact: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        data: Service.Aqm.Dialer.previewContact;
    }>;
    skipPreviewContact: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        data: Service.Aqm.Dialer.previewContact;
    }>;
    removePreviewContact: import("../../core/aqm-reqs").Res<Contact.AgentContact, {
        data: Service.Aqm.Dialer.previewContact;
    }>;
    eOutdialFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eContactUpdated: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eCampaignPreviewAcceptFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eCampaignPreviewSkipFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
    eCampaignPreviewRemoveFailed: import("@uuip/unified-ui-platform-sdk").Signal.WithData<Contact.AgentContact> & {
        listenOnceAsync: (p?: {
            resolveIf?: ((msg: Contact.AgentContact) => boolean) | undefined;
            timeout?: import("../../core/aqm-reqs").Timeout | undefined;
        } | undefined) => Promise<Contact.AgentContact>;
    };
};
declare module "@uuip/unified-ui-platform-sdk" {
    namespace Err {
        type DialerFailureIds = {
            "Service.aqm.dialer.startOutdial": Failure;
        } | {
            "Service.aqm.dialer.ContactUpdateFailed": Failure;
        } | {
            "Service.aqm.dialer.acceptPreview": Failure;
        } | {
            "Service.aqm.dialer.skipPreview": Failure;
        } | {
            "Service.aqm.dialer.removePreview": Failure;
        };
        type GenericFailureId = {
            "Service.reqs.generic.failure": {
                trackingId: string;
            };
        };
        interface Ids {
            "Service.aqm.dialer": DialerFailureIds | GenericFailureId;
        }
    }
}
declare module "../../index" {
    namespace Service.Aqm.Dialer {
        type tasks = {
            id?: string;
            entryPointId: string;
            destination: string;
            direction: string;
            origin?: string;
            attributes: {
                [key: string]: string;
            };
            mediaType: string;
            outboundType: string;
        };
        type updateCadPayLoad = {
            attributes: {
                [key: string]: string;
            };
        };
        type previewContact = {
            interactionId: string;
            campaignId: string | undefined;
        };
    }
}
//# sourceMappingURL=aqm-service-dialer.d.ts.map