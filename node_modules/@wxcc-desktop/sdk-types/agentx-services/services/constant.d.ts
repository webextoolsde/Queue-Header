import { Service } from "..";
declare enum AgentState {
    Idle = "Idle",
    Available = "Available",
    RONA = "RONA",
    AvailableAuxCodeId = "0"
}
declare enum ContactDirection {
    INBOUND = "INBOUND",
    OUTBOUND = "OUTBOUND"
}
declare enum WebexConstants {
    CALL_INACTIVE = "CALL_INACTIVE",
    MEETING_INACTIVE_TERMINATING = "MEETING_INACTIVE_TERMINATING",
    CALL = "CALL",
    MEETING = "MEETING",
    INCOMING = "INCOMING",
    JOIN = "JOIN",
    WEBEX_DND = "WEBEX_DND",
    WEBEX_MEETING_TIME_STAMP = "webex-meeting-time-stamp",
    WEBEX_PRESENCE_UPDATE = "event:apheleia.subscription_update",
    AX_PRESENCE_STATE_UPDATE = "ax-presence-state-update",
    WEBEX_SDK_PRESENCE_UPDATE = "updated",
    WEBEX_CALL_MUTE_STATE_UPDATE = "event:telephony_calls.muted",
    WEBEX_CALL_UNMUTE_STATE_UPDATE = "event:telephony_calls.unmuted",
    WEBEX_CALL_HOLD_STATE_UPDATE = "event:telephony_calls.held",
    WEBEX_CALL_RESUME_STATE_UPDATE = "event:telephony_calls.resumed"
}
declare enum AcqueonConstants {
    ACQUEON_API_URL = "ACQUEON_API_URL",
    CALABRIO_URL = "CALABRIO_URL",
    ACQUEON_CONSOLE_URL = "ACQUEON_CONSOLE_URL"
}
export declare enum RtdConstants {
    RTD_PING_EVENT = "rtd-online-status"
}
export declare enum LoginVoiceOptions {
    AGENT_DN = "AGENT_DN",
    EXTENSION = "EXTENSION",
    BROWSER = "BROWSER"
}
export declare enum MicrosoftServiceEvents {
    RENEW_ACCESS_TOKEN_FAILURE = "RENEW_ACCESS_TOKEN_FAILURE"
}
export declare const MEDIA_SUBCHANNEL_TYPES: {
    appleMessages: {
        normal: {
            dark: string;
            light: string;
        };
        unselected: {
            dark: string;
            light: string;
        };
        aih: {
            dark: string;
            light: string;
        };
        communication: {
            dark: string;
            light: string;
        };
        notification: {
            dark: string;
            light: string;
        };
    };
    googleMessages: {
        normal: {
            dark: string;
            light: string;
        };
        unselected: {
            dark: string;
            light: string;
        };
        aih: {
            dark: string;
            light: string;
        };
        communication: {
            dark: string;
            light: string;
        };
        notification: {
            dark: string;
            light: string;
        };
    };
    outboundEmail: {
        normal: {
            dark: string;
            light: string;
        };
        unselected: {
            dark: string;
            light: string;
        };
        aih: {
            dark: string;
            light: string;
        };
        communication: {
            dark: string;
            light: string;
        };
        notification: {
            dark: string;
            light: string;
        };
    };
    outboundSms: {
        normal: {
            dark: string;
            light: string;
        };
        unselected: {
            dark: string;
            light: string;
        };
        aih: {
            dark: string;
            light: string;
        };
        communication: {
            dark: string;
            light: string;
        };
        notification: {
            dark: string;
            light: string;
        };
    };
    sms: {
        normal: {
            dark: string;
            light: string;
        };
        unselected: {
            dark: string;
            light: string;
        };
        aih: {
            dark: string;
            light: string;
        };
        communication: {
            dark: string;
            light: string;
        };
        notification: {
            dark: string;
            light: string;
        };
    };
};
export declare enum DESTINATION_TYPE {
    QUEUE = "queue",
    DIAL_NUMBER = "dialNumber",
    AGENT = "agent",
    EPDN = "entrypointDialNumber",
    ENTRY_POINT = "entryPoint"
}
export declare function constant(): {
    AgentState: typeof AgentState;
    ContactDirection: typeof ContactDirection;
    WebexConstants: typeof WebexConstants;
    AcqueonConstants: typeof AcqueonConstants;
    RtdConstants: typeof RtdConstants;
    LoginVoiceOptions: typeof LoginVoiceOptions;
    MicrosoftServiceEvents: typeof MicrosoftServiceEvents;
    MEDIA_SUBCHANNEL_TYPES: {
        appleMessages: {
            normal: {
                dark: string;
                light: string;
            };
            unselected: {
                dark: string;
                light: string;
            };
            aih: {
                dark: string;
                light: string;
            };
            communication: {
                dark: string;
                light: string;
            };
            notification: {
                dark: string;
                light: string;
            };
        };
        googleMessages: {
            normal: {
                dark: string;
                light: string;
            };
            unselected: {
                dark: string;
                light: string;
            };
            aih: {
                dark: string;
                light: string;
            };
            communication: {
                dark: string;
                light: string;
            };
            notification: {
                dark: string;
                light: string;
            };
        };
        outboundEmail: {
            normal: {
                dark: string;
                light: string;
            };
            unselected: {
                dark: string;
                light: string;
            };
            aih: {
                dark: string;
                light: string;
            };
            communication: {
                dark: string;
                light: string;
            };
            notification: {
                dark: string;
                light: string;
            };
        };
        outboundSms: {
            normal: {
                dark: string;
                light: string;
            };
            unselected: {
                dark: string;
                light: string;
            };
            aih: {
                dark: string;
                light: string;
            };
            communication: {
                dark: string;
                light: string;
            };
            notification: {
                dark: string;
                light: string;
            };
        };
        sms: {
            normal: {
                dark: string;
                light: string;
            };
            unselected: {
                dark: string;
                light: string;
            };
            aih: {
                dark: string;
                light: string;
            };
            communication: {
                dark: string;
                light: string;
            };
            notification: {
                dark: string;
                light: string;
            };
        };
    };
    DESTINATION_TYPE: typeof DESTINATION_TYPE;
};
export declare const KEY_PATH = "ACQUEON_API_URL,ACQUEON_CONSOLE_URL";
export declare const DEFAULT_LOGIN_VOICE_OPTIONS: Service.Conf.LoginOption[];
export declare const LOGIN_VOICE_OPTIONS_FOR_ORDER: Service.Conf.LoginOption[];
export declare const NON_PROD_WEBEX_URL: {
    U2C: string;
    HYDRA: string;
};
export declare const WEB_CALLING: {
    INDICATOR_CALLING: string;
    INDICATOR_CONTACT_CENTER: string;
    CALLING_REGISTER_EVENT: string;
    CALLING_ERROR: string;
    CALLING_UN_REGISTERED: string;
    CALLING_INCOMING_EVENT: string;
    CALL_DISCONNECT_EVENT: string;
    DTMF_TONE_CHANGED_EVENT: string;
    CALL_REMOTE_MEDIA_UPDATE_EVENT: string;
    CALL_ESTABLISHED_EVENT: string;
    AX_WC_NOT_FOUND: string;
    AX_WC_DEVICE_REGISTERED: string;
    AX_WC_DEVICE_REGISTERING: string;
    AX_WC_DEVICE_DISCONNECTED: string;
    AX_WC_ESTABLISHED: string;
    AX_WC_REMOTE_MEDIA_UPDATE: string;
    AX_WC_INCOMING: string;
};
export declare const WEBEX_CALLING: {
    ANSWER_CALL_SUCCESS: string;
    ANSWER_CALL_FAILED: string;
    REJECT_CALL_SUCCESS: string;
    REJECT_CALL_FAILED: string;
    HANG_UP_CALL_SUCCESS: string;
    HANG_UP_CALL_FAILED: string;
    RESUME_CALL_SUCCESS: string;
    RESUME_CALL_FAILED: string;
    HOLD_CALL_SUCCESS: string;
    HOLD_CALL_FAILED: string;
    MUTE_CALL_SUCCESS: string;
    MUTE_CALL_FAILED: string;
    UNMUTE_CALL_SUCCESS: string;
    UNMUTE_CALL_FAILED: string;
    TRANSMIT_DTMF_FAILED: string;
    GET_CALL_DETAILS_FAILED: string;
    GET_PREFERRED_ANSWER_ENDPOINTS_FAILED: string;
    SET_PREFERRED_ANSWER_ENDPOINT_FAILED: string;
    GET_CONTACT_CENTER_EXTENSIONS_FAILED: string;
};
export declare const WEBEX_CALLING_MERC_SYNC: {
    MUTE_UNMUTE: string;
    HOLD_RESUME: string;
};
export declare const PRESENCE_MERCURY_REG: {
    AX_MERCURY_SUCCESSFUL: string;
    AX_MERCURY_FAILURE: string;
    AX_MERCURY_RETRYING: string;
};
export declare const MICROSOFT_URLS: {
    FETCH_USERS: string;
    FETCH_USERS_PRESENCE: string;
    BATCH_REQUEST: string;
};
export declare const RETRY_TIMEOUT = 1000;
export declare const REVOKE_PRESENCE_TOKEN_FAILURE = "revoke-presence-token-failure";
export declare const DEFAULT_CROSS_CLIENT_STATE_TTL: number;
export declare const APP_NAME = "wxcc";
export declare const EXPIRATION_OFFSET: number;
export declare const MERCURY_TIME_OFFSET_THRESHOLD_MS = 7500;
export declare const uuipEol = "<uuip-eol>";
export declare const CACHE_CONTROL_HEADER = "no-cache, no-store, must-revalidate";
export declare const HTTP_HEADERS: {
    "Content-Type": string;
    "Cache-Control": string;
};
export {};
//# sourceMappingURL=constant.d.ts.map