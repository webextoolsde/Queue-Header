import { InteractionsServiceConstants } from "../interactions-service-constants";
export declare const testFilters: {
    queueDuration: {
        filter: number;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
    channelType: {
        filter: string;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
    channelSubType: {
        filter: string;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
    "lastQueue.name": {
        filter: string;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
    csatScore: {
        filter: number;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
    status: {
        filter: string;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
    transferCount: {
        filter: number;
        filterType: InteractionsServiceConstants.FilterType;
        operator: InteractionsServiceConstants.FilterOperator;
    }[];
};
export declare const expectedTestFilters: {
    and: ({
        id: {
            notequals: string;
        };
        isActive?: undefined;
    } | {
        isActive: {
            equals: boolean;
        };
        id?: undefined;
    } | {
        or: ({
            channelType: {
                equals: string;
            };
            channelSubType?: undefined;
        } | {
            channelSubType: {
                equals: string;
            };
            channelType?: undefined;
        })[];
        queueDuration?: undefined;
        lastQueue?: undefined;
        status?: undefined;
        and?: undefined;
    } | {
        queueDuration: {
            gt: number;
        };
        or?: undefined;
        lastQueue?: undefined;
        status?: undefined;
        and?: undefined;
    } | {
        lastQueue: {
            name: {
                equals: string;
            };
        };
        or?: undefined;
        queueDuration?: undefined;
        status?: undefined;
        and?: undefined;
    } | {
        or: {
            csatScore: {
                equals: number;
            };
        }[];
        queueDuration?: undefined;
        lastQueue?: undefined;
        status?: undefined;
        and?: undefined;
    } | {
        status: {
            equals: string;
        };
        or?: undefined;
        queueDuration?: undefined;
        lastQueue?: undefined;
        and?: undefined;
    } | {
        and: ({
            transferCount: {
                gte: number;
                lte?: undefined;
            };
        } | {
            transferCount: {
                lte: number;
                gte?: undefined;
            };
        })[];
        or?: undefined;
        queueDuration?: undefined;
        lastQueue?: undefined;
        status?: undefined;
    })[];
};
export declare const searchFilterTestData: ({
    name: string;
    userFilters: {
        isActive: {
            filter: boolean;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        })[];
    };
} | {
    name: string;
    userFilters: {
        queueDuration: {
            filter: number;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            queueDuration: {
                gt: number;
            };
        })[];
    };
} | {
    name: string;
    userFilters: {
        "lastQueue.name": {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        status?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            lastQueue: {
                name: {
                    equals: string;
                };
            };
        })[];
    };
} | {
    name: string;
    userFilters: {
        status: {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            or: {
                status: {
                    equals: string;
                };
            }[];
        })[];
    };
} | {
    name: string;
    userFilters: {
        status: {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            status: {
                equals: string;
            };
        })[];
    };
} | {
    name: string;
    userFilters: {
        transferCount: {
            filter: number;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            and: ({
                transferCount: {
                    gte: number;
                    lte?: undefined;
                };
            } | {
                transferCount: {
                    lte: number;
                    gte?: undefined;
                };
            })[];
        })[];
    };
} | {
    name: string;
    userFilters: {
        csatScore: {
            filter: number;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            or: {
                csatScore: {
                    equals: number;
                };
            }[];
        })[];
    };
} | {
    name: string;
    userFilters: {
        csatScore: {
            filter: number;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        channelType?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            csatScore: {
                equals: number;
            };
        })[];
    };
} | {
    name: string;
    userFilters: {
        channelType: {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        channelSubType: {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            or: ({
                channelType: {
                    equals: string;
                };
                channelSubType?: undefined;
            } | {
                channelSubType: {
                    equals: string;
                };
                channelType?: undefined;
            })[];
        })[];
    };
} | {
    name: string;
    userFilters: {
        channelType: {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelSubType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            or: {
                channelType: {
                    equals: string;
                };
            }[];
        })[];
    };
} | {
    name: string;
    userFilters: {
        channelSubType: {
            filter: string;
            filterType: InteractionsServiceConstants.FilterType;
            operator: InteractionsServiceConstants.FilterOperator;
        }[];
        isActive?: undefined;
        queueDuration?: undefined;
        "lastQueue.name"?: undefined;
        status?: undefined;
        transferCount?: undefined;
        csatScore?: undefined;
        channelType?: undefined;
    };
    expectedFilters: {
        and: ({
            id: {
                notequals: string;
            };
            isActive?: undefined;
        } | {
            isActive: {
                equals: boolean;
            };
            id?: undefined;
        } | {
            or: {
                channelSubType: {
                    equals: string;
                };
            }[];
        })[];
    };
})[];
//# sourceMappingURL=interactions-service-search.test_data.d.ts.map