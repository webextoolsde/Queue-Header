import { InteractionsRtdEndpoint } from "./interactions-service-rtd";
import { InteractionsSearchApi } from "./interactions-service-search";
import { InteractionsServiceTypes } from "./interactions-service.types";
export declare class InteractionsService {
    private readonly interactionsSearchApi;
    private readonly interactionsRtd;
    private readonly subscribers;
    constructor(interactionsSearchApi: InteractionsSearchApi, interactionsRtd: InteractionsRtdEndpoint);
    fetchCompletedInteractions(startTime: number, endTime: number, callback: InteractionsServiceTypes.PollingCallback, sortBy?: InteractionsServiceTypes.SortBy, filters?: InteractionsServiceTypes.Filters): Promise<InteractionsServiceTypes.CompletedResponse>;
    subscribeInteractionUpdates(queryType: InteractionsServiceTypes.ActiveOrQueuedInteractions, callback: InteractionsServiceTypes.RealTimeCallback): Promise<string>;
    stopInteractionUpdates(subscriptionId: string): Promise<void>;
    startQueuedPolling(callback: InteractionsServiceTypes.PollingCallback, sortBy?: InteractionsServiceTypes.SortBy, filters?: InteractionsServiceTypes.Filters): Promise<string>;
    fetchMoreQueuedInteractions(subscriptionId: string): Promise<boolean>;
    private addSubscription;
}
export declare function buildInteractionsService(): InteractionsService;
//# sourceMappingURL=interactions-service.d.ts.map