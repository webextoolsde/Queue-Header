import { Service } from "../../index";
import Pci = Service.Pci;
export declare function pciService(): {
    pciCheck: (p: {
        data: any;
    }, cb?: ((res: any) => void | Pci.pciCheckResponse) | undefined) => Promise<Pci.pciCheckResponse>;
    fetchPciSettings: (p: {
        orgId: string;
    }, cb?: ((res: any) => void | Pci.pciSettingsResponse) | undefined) => Promise<Pci.pciSettingsResponse>;
    fetchPciAllowedAttachmentTypes: (p: unknown, cb?: ((res: any) => void | Pci.pciAllowedAttachmentTypes) | undefined) => Promise<Pci.pciAllowedAttachmentTypes>;
};
declare module "../../index" {
    namespace Service.Pci {
        type pciCheckResponse = {
            data: {
                content: string;
            };
            status: number;
        };
        type pciCheckRequest = {
            content: string;
        };
        type pciSettingsResponse = {
            action: string;
            isAttachmentEnabled: boolean;
            isChatBannerEnabled: boolean;
        };
        type pciAllowedAttachmentTypes = {
            data: Array<string>;
        };
    }
}
declare module "@uuip/unified-ui-platform-sdk" {
    namespace Err {
        interface Ids {
            "Service.pci": "Service.pci.pciCheck" | "Service.pci.fetchPciSettings" | "Service.pci.fetchPciAllowedAttachmentTypes";
        }
    }
}
//# sourceMappingURL=pci-service.d.ts.map