import { Service } from "../../index";
export declare const KEY_UP_EVENT = "keyup";
export declare const KEY_REGISTRATION_EVENT = "register";
export declare const KEY_EXECUTE_EVENT = "execute";
export declare const KEY_CONFLICT_EVENT = "conflict";
export declare const KEY_CONFLICT_RESOLVED = "conflict_resolved";
export declare const validModifierKeysPressed: (keyEvent: KeyboardEvent) => boolean;
export declare const findMatchingKey: (shortcutKeyMap: Map<string, Service.shortcut.KeyInfo>, event?: KeyboardEvent) => Service.shortcut.KeyInfo | undefined;
export declare const hasConflict: (data: Service.shortcut.KeyInfo | undefined, value: Service.shortcut.KeyInfo) => boolean | "" | undefined;
export declare const REGISTERED_KEYS: {
    EXPAND_COLLAPSE_INTERACTION_PANEL_KEY: string;
    SAVE_EDITED_CAD_KEY: string;
    REVERT_EDITED_CAD_KEY: string;
    HOLD_RESUME_CALL_KEY: string;
    TRANSFER_KEY: string;
    CONSULT_KEY: string;
    END_KEY: string;
    CONFERENCE_KEY: string;
    PAUSE_RESUME_RECORDING_KEY: string;
    GO_TO_AVAILABLE_KEY: string;
    OPEN_STATE_SELECTOR_KEY: string;
    SEND_EMAIL_KEY: string;
    REPLY_EMAIL_KEY: string;
    REPLY_ALL_EMAIL_KEY: string;
    OPEN_USER_PROFILE_KEY: string;
    ENABLE_SILENT_NOTIFICATION_KEY: string;
    OPEN_SHORTCUT_KEY_MODAL_KEY: string;
    DOWNLOAD_ERROR_REPORT_KEY: string;
    SIGNOUT_KEY: string;
    ACCEPT_TASK_KEY: string;
    SWITCH_POPOVER_KEY: string;
    EXPAND_COLLAPSE_POPOVER_KEY: string;
    OPEN_OUTDIAL_KEY: string;
    OPEN_WRAP_UP_KEY: string;
    EXPAND_COLLAPSE_TASK_LIST_PANEL_KEY: string;
    OPEN_NOTIFICATION_CENTER_KEY: string;
    OPEN_NAVIGATION_TAB_KEY: string;
    REFRESH_KEY: string;
    SWITCH_TASK_KEY: string;
    ACCEPT_ALL_TASK_KEY: string;
    EXPAND_COLLAPSE_WEBEX: string;
    MINIMIZE_RESTORE_WEBEX: string;
    OPEN_DTMF_KEYPAD: string;
};
export declare const MODIFIERS: {
    CTRL_SHIFT: string;
    ALT_SHIFT: string;
    CTRL_ALT: string;
    SHIFT: string;
    CTRL: string;
    ALT: string;
};
export declare const DEFAULT_SHORTCUT_KEYS: {
    [key: string]: Service.shortcut.KeyInfo[];
};
//# sourceMappingURL=ShortcutUtil.d.ts.map