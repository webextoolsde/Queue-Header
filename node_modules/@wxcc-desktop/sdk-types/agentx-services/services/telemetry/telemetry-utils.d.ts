import { FairUsage, RateLimitInfo } from "../../utils/fairUsage";
interface FairUsageInfos {
    [key: string]: {
        rateLimitInfo: RateLimitInfo;
        numExcess: number;
        stackTrace: string;
    }[];
}
interface FairUsageSummary {
    perEvent: FairUsageInfos;
    totalEventCount: number;
}
interface TelemetryNode {
    data: Record<string, any>;
    attachNode(key: string, node: TelemetryNode): void;
    attachInteger(key: string, value: number): void;
    attachString(key: string, value: string): void;
    empty(): boolean;
}
export declare function fetchFairUsageSummary(fairUsage: FairUsage): FairUsageSummary;
export declare function generateRateLimitingTelemetryEvent(fairUsage: FairUsage): TelemetryNode;
export {};
//# sourceMappingURL=telemetry-utils.d.ts.map