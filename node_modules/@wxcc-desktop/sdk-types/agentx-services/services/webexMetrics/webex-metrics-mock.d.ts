import { EventPayload } from "@webex/internal-plugin-metrics/dist/types/metrics.types";
import { BehavioralEventTaxonomy } from "./behavioral-events";
export declare const eventName: string;
export declare const mockTaxonomy: BehavioralEventTaxonomy;
export declare const payload: EventPayload;
export declare const expectedBehavioralWebexPayload: {
    product: string;
    agent: string;
    target: string;
    verb: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedBehavioralWebexPayloadWithCustomValues: {
    product: string;
    agent: string;
    target: string;
    verb: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
        super1: string;
        super2: number;
    };
};
export declare const expectedBehavioralWebexPayloadTimedEvent: {
    product: string;
    agent: string;
    target: string;
    verb: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedBehavioralWebexPayloadWithoutEventPayload: {
    product: string;
    agent: string;
    target: string;
    verb: string;
    payload: {
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedBehavioralWebexPayloadTimedEventNoEventPayload: {
    product: string;
    agent: string;
    target: string;
    verb: string;
    payload: {
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedOperationalWebexPayload: {
    name: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedOperationalWebexPayloadTimedEvent: {
    name: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedOperationalWebexPayloadWithoutEventPayload: {
    name: string;
    payload: {
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedOperationalWebexPayloadTimedEventNoEventPayload: {
    name: string;
    payload: {
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
};
export declare const expectedBusinessWebexPayload: {
    name: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
    table: string;
};
export declare const expectedBusinessWebexPayloadTimedEvent: {
    name: string;
    payload: {
        foo: string;
        ASDF: number;
        Hj_Kl: boolean;
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
    table: string;
};
export declare const expectedBusinessWebexPayloadWithoutEventPayload: {
    name: string;
    payload: {
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
    table: string;
};
export declare const expectedBusinessWebexPayloadTimedEventNoEventPayload: {
    name: string;
    payload: {
        browser_instance_ID: string;
        current_state: string;
        dark_mode_enabled: boolean;
        data_center: string;
        desktop_build_number: string;
        duration_ms: number;
        tabHidden: boolean;
        task_pane_state: string;
        user_role: string;
    };
    table: string;
};
export declare const time1: number;
export declare const time2: number;
//# sourceMappingURL=webex-metrics-mock.d.ts.map