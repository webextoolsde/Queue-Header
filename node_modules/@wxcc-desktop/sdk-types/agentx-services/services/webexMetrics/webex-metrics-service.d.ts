import { EventPayload } from "@webex/internal-plugin-metrics/dist/types/metrics.types";
import { WebexService } from "../webex/webex-service";
export declare class WebexMetricsService {
    private readonly runningEvents;
    private superProps;
    private pendingBehavioralEvents;
    private pendingOperationalEvents;
    private pendingBusinessEvents;
    private readyToSubmitEvents;
    private readonly webex;
    constructor(webex: WebexService);
    setReadyToSubmitEvents(): void;
    private submitPendingEvents;
    private submitPendingBehavioralEvents;
    private submitPendingOperationalEvents;
    private submitPendingBusinessEvents;
    private addDurationIfTimed;
    private spacesToUnderscores;
    private addCommonMetadata;
    private preparePayload;
    private metricsDisabled;
    trackBehavioralEvent(name: string, options?: EventPayload): void;
    trackOperationalEvent(name: string, options?: EventPayload): void;
    trackBusinessEvent(name: string, options?: EventPayload): void;
    timeEvent(_name: string): void;
    register(superProps: Record<string, any>): void;
    private getDataCenterDetails;
}
//# sourceMappingURL=webex-metrics-service.d.ts.map