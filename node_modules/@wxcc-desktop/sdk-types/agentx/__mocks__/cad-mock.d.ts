export declare const mockCadData: {
    TestCadVar: {
        displayName: string;
        name: string;
        agentEditable: boolean;
        agentViewable: boolean;
        value: string;
        type: string;
        isSecure: boolean;
        secureKeyId: string;
        secureKeyVersion: number;
    };
    virtualTeamName: {
        displayName: string;
        name: string;
        agentEditable: boolean;
        agentViewable: boolean;
        value: string;
        type: string;
        isSecure: boolean;
        secureKeyId: string;
        secureKeyVersion: number;
    };
    ani: {
        displayName: string;
        name: string;
        agentEditable: boolean;
        agentViewable: boolean;
        value: string;
        type: string;
        isSecure: boolean;
        secureKeyId: string;
        secureKeyVersion: number;
    };
    ronaTimeout: {
        displayName: string;
        name: string;
        agentEditable: boolean;
        agentViewable: boolean;
        value: string;
        type: string;
        isSecure: boolean;
        secureKeyId: string;
        secureKeyVersion: number;
    };
};
export declare const CustomerInfo: {
    customerName: string;
    mediaType: string;
    hasJoined: boolean;
    isWrapUp: boolean;
    isHold: boolean;
    destAgentName: string;
    destAgentPhoneNumber: string;
    agentId: string;
    consultHold: boolean;
    consultMediaResourceId: string;
    ownerName: string;
    ownerPhoneNumber: string;
    destAgentId: string;
    consultTimeStamp: number;
    isConsulted: boolean;
    queueId: string;
    timeStamp: number;
    ani: string;
    orgId: string;
    owner: string;
    interactionId: string;
    state: string;
    isTerminated: boolean;
    mediaResourceId: string;
    mediaChannel: string;
    virtualTeamName: string;
    ronaTimeout: string;
    isFcManaged: boolean;
    wrapUpTimestamp: number;
    holdTimestamp: number;
    consultHoldTimestamp: number;
    ivrPath: string;
    phoneNumber: string;
    pathId: string;
    dnis: string;
    category: string;
    additionalDetails: string;
    isConferencing: boolean;
    isRecorded: boolean;
    isRecordingPaused: boolean;
    isPauseResumeEnabled: boolean;
    contactDirection: string;
    sourceNumber: string;
    sourcePage: string;
    appUser: string;
    customerNumber: string;
    ctqInProgress: boolean;
    updatedBy: string;
    isOwner: boolean;
    callAssociatedData: {
        TestCadVar: {
            displayName: string;
            name: string;
            agentEditable: boolean;
            agentViewable: boolean;
            value: string;
            type: string;
            isSecure: boolean;
            secureKeyId: string;
            secureKeyVersion: number;
        };
        virtualTeamName: {
            displayName: string;
            name: string;
            agentEditable: boolean;
            agentViewable: boolean;
            value: string;
            type: string;
            isSecure: boolean;
            secureKeyId: string;
            secureKeyVersion: number;
        };
        ani: {
            displayName: string;
            name: string;
            agentEditable: boolean;
            agentViewable: boolean;
            value: string;
            type: string;
            isSecure: boolean;
            secureKeyId: string;
            secureKeyVersion: number;
        };
        ronaTimeout: {
            displayName: string;
            name: string;
            agentEditable: boolean;
            agentViewable: boolean;
            value: string;
            type: string;
            isSecure: boolean;
            secureKeyId: string;
            secureKeyVersion: number;
        };
        nextVteamId: {
            displayName: string;
            name: string;
            agentEditable: boolean;
            agentViewable: boolean;
            value: string;
            type: string;
            isSecure: boolean;
            secureKeyId: string;
            secureKeyVersion: number;
        };
        dn: {
            displayName: string;
            name: string;
            agentEditable: boolean;
            agentViewable: boolean;
            value: string;
            type: string;
            isSecure: boolean;
            secureKeyId: string;
            secureKeyVersion: number;
        };
    };
};
