import "@agentx/agentx-mfe-wc-based";
import "@uuip/unified-ui-platform";
import { DynamicWidget } from "@uuip/unified-ui-platform";
import "@uuip/uuip-advance-layout";
import { LitElement, PropertyValues } from "lit-element";
import "./MoreActionsWrapper";
import "./PageTitle";
import "./TimezoneLabel";
export declare class DynamicArea extends LitElement {
    area: any;
    height: string;
    isStationLoginSuccess: boolean;
    private isEdit;
    private isSuccess;
    private containerHeight;
    private containerWidth;
    private dw;
    private editLayoutTrigger;
    private layoutContainer;
    private adw;
    private resizeObserver;
    save(): void;
    reset(): void;
    cancel(): void;
    edit(): void;
    showSuccessIcon(): void;
    showResetConfirmation(): void;
    static get styles(): import("lit-element").CSSResult;
    get editMenuContent(): import("lit-element").TemplateResult;
    get editFloatingMenu(): import("lit-element").TemplateResult;
    render(): import("lit-element").TemplateResult;
    firstUpdated(props: PropertyValues): void;
    updated(props: PropertyValues): void;
    connectedCallback(): Promise<void>;
    disconnectedCallback(): Promise<void>;
    handleEventFromDynamicWidget(): void;
    visibilityCheckDebug: DynamicWidget.VisibilityCheck;
}
declare global {
    interface Window {
        ResizeObserver: any;
    }
}
