import { LitElement, PropertyValues } from "lit-element";
export declare class WebCallingWidget extends LitElement {
    languageResources: string;
    mediaSettings: any;
    micDeviceId: string;
    private localMicrophoneStream;
    private micLabel;
    private speakerLabel;
    private agentId;
    localAudio: HTMLMediaElement & {
        setSinkId(deviceId: string): void;
    };
    remoteAudio: HTMLMediaElement & {
        setSinkId(deviceId: string): void;
    };
    connectedCallback(): void;
    protected updated(changedProperties: Map<string | number | symbol, unknown>): void;
    firstUpdated(props: PropertyValues): void;
    updateSpeakerSettings(): Promise<void>;
    updateRemoteTrack(track: any): void;
    getMedia(): any;
    getMic(): Promise<any>;
    getSpeaker(): Promise<any>;
    updateSpeaker(): Promise<void>;
    getMediaStream(audio: any): Promise<void>;
    updateMediaStreams(): Promise<void>;
    getMediaElements(): HTMLMediaElement[];
    cleanUpMedia(): void;
    handleCallIncomingEvt(): Promise<void>;
    handleCallEstablishedEvt: () => void;
    handleCallDisconnectedEvt: () => void;
    handleCallDeclineEvt: () => void;
    handleCallAnswerEvt: () => Promise<void>;
    stopWebCallRing(): void;
    private readonly handleRemoteMediaUpdate;
    private readonly handleMuteUnmute;
    private readonly handleMuteUnmuteCleanup;
    private readonly debouncedHandleCallAnswerEvt;
    registerWebCallEvents(): void;
    unRegisterWebCallEvents(): void;
    private handleCanPlayThrough;
    addPlayIfPausedEvents(): void;
    addPlayIfPausedEventsCleanup(): void;
    disconnectedCallback(): void;
    render(): import("lit-element").TemplateResult;
}
