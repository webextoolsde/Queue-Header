import { InteractionControlNS } from "@agentx/agentx-mfe-react-based";
import { Service } from "@agentx/agentx-services";
import { OpenTask } from "@component-stores/TasksStore/open-tasks-store.interface";
export declare const getIsConsultedAgentEPDN: (data?: OpenTask) => boolean;
export declare const getPrimaryMediaParticipants: (data: OpenTask) => InteractionControlNS.MediaParticipants;
export declare const getIsConsultInProgress: (data: OpenTask) => boolean;
export declare const getIsConferenceInProgress: (data: any) => boolean;
export declare const getIsConsultEnabledForMPC: (data: any, isMPCEnabled: boolean, agentId: string) => boolean;
export declare const setmTypeForEPDN: (data: any, mType: string) => string;
export declare const findMediaResourceId: (data: Service.Aqm.Contact.Interaction["media"], mType: string) => string;
export declare const isParticipantInMainInteraction: (interactionObj: Service.Aqm.Contact.Interaction, agentId: string) => boolean;
export declare const getConsultMPCState: (data: any, agentId: string) => string;
export declare const findHoldStatus: (data: any, mType: string) => boolean;
export declare const findHoldTimestamp: (data: any, mType: string) => any;
export declare const isOwner: (interaction: Service.Aqm.Contact.AgentContact["data"]["interaction"], agentId: string) => boolean;
export declare const getConsultMediaResourceId: (data: any) => any;
export declare const getIsConsultedAgent: (data: any) => any;
export declare const isCustomerInParticipants: (participants: Service.Aqm.Contact.AgentContact["data"]["interaction"]["participants"]) => boolean;
export declare const getIsWrapupAssist: (interaction: Service.Aqm.Contact.AgentContact["data"]["interaction"]) => boolean;
export declare const getIsSecondaryAgentCBT: (interaction: Service.Aqm.Contact.AgentContact["data"]["interaction"], destAgentId: any) => boolean;
export declare const getConsultedAgentId: (media: Service.Aqm.Contact.AgentContact["data"]["interaction"]["media"], agentId: string) => string;
export declare const getDestAgentIdForCBT: (interaction: Service.Aqm.Contact.AgentContact["data"]["interaction"], consultingAgent: string) => string;
export declare const isAgentContactInOfferConferenceState: (data: any, agentId: string) => boolean;
