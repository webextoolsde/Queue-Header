import { Service } from "@wxcc-desktop/sdk-types";
import { ChangeAgentStateDataType } from "./agent-state-info-jsapi";
export declare namespace validationUtils {
    const validateAgentState: (value: any) => boolean;
    const validateURL: (value: string) => boolean;
    const validateChannelName: (value: any) => boolean;
    const validateDestinationType: (value: any) => boolean;
    const validateMediaType: (value: any) => boolean;
    const validateUTCTimeStampNumberFormat: (value: number) => boolean;
    const validateNumber: (value: number) => boolean;
    const validateBoolean: (value: any) => boolean;
    const validateStringToBoolean: (value: string) => boolean;
    const validatePropValueNotNullAndEmpty: (value: any) => boolean;
    const validateChannelType: (value: any) => boolean;
    const validateMonitorType: (value: any) => boolean;
    const validateUUID: (value: string) => boolean;
    const validateStringNumberOnly: (value: string) => boolean;
    const validateBuddyAgents: (value: Service.Aqm.Contact.BuddyAgents, functionName: string) => void;
    const validateAuxCodeType: (value: Service.Aqm.Configs.AuxCodeType, functionName: string) => void;
    const validateAuxCodePayload: (value: Service.Aqm.Configs.AuxCodePayload, functionName: string) => void;
    const validateCancelCtq: (value: Service.Aqm.Contact.cancelCtq, functionName: string) => void;
    const validateWrapupPayload: (value: Service.Aqm.Contact.WrapupPayLoad, functionName: string) => void;
    const validateVTeamTransferPayload: (value: Service.Aqm.Contact.vteamTransferPayLoad, functionName: string) => void;
    const validateBlindTransferPayload: (value: Service.Aqm.Contact.blindTransferPayLoad, functionName: string) => void;
    const validateConsultPayload: (value: Service.Aqm.Contact.ConsultPayload, functionName: string) => void;
    const validateConsultTransferPayLoad: (value: Service.Aqm.Contact.consultTransferPayLoad, functionName: string) => void;
    const validateWrapUpV2Payload: (value: Service.Aqm.Contact.WrapupV2PayLoad, functionName: string) => void;
    const validateChangeAgentStateType: (data: ChangeAgentStateDataType, functionName: string) => void;
    const validateConsultDataV2Payload: (value: Service.Aqm.Contact.consultDataV2, functionName: string) => void;
    const validateConsultConferenceDataV2Payload: (value: Service.Aqm.Contact.consultConferenceDataV2, functionName: string) => void;
    const validateTransferV2Payload: (value: Service.Aqm.Contact.transferV2Payload, functionName: string) => void;
    const validateBuddyAgentsV2Payload: (value: Service.Aqm.Contact.BuddyAgentsV2, functionName: string) => void;
    const validateVTeam: (value: Service.Aqm.Contact.VTeam, functionName: string) => void;
    const validateDialerTasks: (value: Service.Aqm.Dialer.tasks, functionName: string) => void;
    const validatePreviewCampaignPayload: (value: Service.Aqm.Dialer.previewContact, functionName: string) => void;
    const validateMonitoringRequest: (value: Service.Aqm.Supervisor.MonitoringRequest, functionName: string) => void;
    const validateMultiConsultPayload: (value: any, functionName: string) => void;
}
